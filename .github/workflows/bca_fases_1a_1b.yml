name: BCA Fases 1A + 1B

on:
  schedule:
    - cron:  '5 0 * * *'    # 02:05 España (00:05 UTC)
  workflow_dispatch:

jobs:
  bca-fase1a1b:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    env:
      BCA_USER: ${{ secrets.BCA_USER }}
      BCA_PASS: ${{ secrets.BCA_PASS }}
      GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m playwright install chromium

      - name: Restaurar token.pickle desde base64
        run: echo "${{ secrets.TOKEN_PICKLE_B64 }}" | base64 -d > token.pickle

      - name: Ejecutar Fase 1A (scrape links) con retry manual
        run: |
          n=0
          until [ $n -ge 2 ]
          do
            python Fase1A_playwright_compat.py && break
            n=$((n+1))
            echo "Fallo en Fase 1A, esperando 2 minutos antes de reintentar..."
            sleep 120
          done

      - name: Ejecutar Fase 1B (scrape fichas) con retry manual
        run: |
          n=0
          until [ $n -ge 2 ]
          do
            python Fase1B_cloud.py -i fichas_vehiculos_$(date +%Y%m%d).xlsx -s bca_storage_phase1.json && break
            n=$((n+1))
            echo "Fallo en Fase 1B, esperando 2 minutos antes de reintentar..."
            sleep 120
          done
          
      - name: Normalización (post 1B) con whitelist
        run: |
          HOY=$(date +%Y%m%d)
          # Asegúrate de tener el fichero en el repo: whitelist.xlsx
          # y el script: normalizacionv2.py en la raíz o ajusta la ruta.
          python normalizacionv2.py fichas_vehiculos_${HOY}.xlsx \
            --whitelist whitelist.xlsx \
            --weights weights.json \
            --output_excel fichas_vehiculos_${HOY}.xlsx

      - name: Subir Excel resultado para la siguiente fase
        uses: actions/upload-artifact@v4
        with:
          name: fichas_vehiculos
          path: fichas_vehiculos_*.xlsx

      - name: Subir resultados a Google Drive (Python)
        run: python upload_fase1.py
        env:
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
          GOOGLE_OAUTH_B64: ${{ secrets.GOOGLE_OAUTH_B64 }}
